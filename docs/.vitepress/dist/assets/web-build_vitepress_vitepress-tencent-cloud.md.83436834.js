import{_ as s,o as n,c as a,Q as e}from"./chunks/framework.1fa2d359.js";const u=JSON.parse('{"title":"Nginx 反向代理实现 VitePress 站点部署到腾讯云服务器","description":"","frontmatter":{},"headers":[],"relativePath":"web-build/vitepress/vitepress-tencent-cloud.md","filePath":"web-build/vitepress/vitepress-tencent-cloud.md","lastUpdated":1694490077000}'),l={name:"web-build/vitepress/vitepress-tencent-cloud.md"},p=e(`<h1 id="nginx-反向代理实现-vitepress-站点部署到腾讯云服务器" tabindex="-1">Nginx 反向代理实现 VitePress 站点部署到腾讯云服务器 <a class="header-anchor" href="#nginx-反向代理实现-vitepress-站点部署到腾讯云服务器" aria-label="Permalink to &quot;Nginx 反向代理实现 VitePress 站点部署到腾讯云服务器&quot;">​</a></h1><h2 id="目标" tabindex="-1">目标 <a class="header-anchor" href="#目标" aria-label="Permalink to &quot;目标&quot;">​</a></h2><p>将 VitePress 站点部署到腾讯云服务器，访问 <a href="https://www.tangjiayan.com/" target="_blank" rel="noreferrer">www.tangjiayan.com</a> 时打开设计好的网站。</p><p><img src="https://cdn.tangjiayan.com/notes/web-build/vitepress/vitepress-tencent-cloud/homepage.png" alt="homepage"></p><p>主页的设计之后会另写一篇笔记。</p><h2 id="备份站点" tabindex="-1">备份站点 <a class="header-anchor" href="#备份站点" aria-label="Permalink to &quot;备份站点&quot;">​</a></h2><p>使用 WordPress 插件 <a href="https://wordpress.org/plugins/updraftplus/" target="_blank" rel="noreferrer">UpDraftPlus</a> 将原站点备份。</p><p><img src="https://cdn.tangjiayan.com/notes/web-build/vitepress/vitepress-tencent-cloud/backup.png" alt="backup"></p><h2 id="重装服务器" tabindex="-1">重装服务器 <a class="header-anchor" href="#重装服务器" aria-label="Permalink to &quot;重装服务器&quot;">​</a></h2><p>备份好之后，在腾讯云轻量应用服务器后台把操作系统重装一下，原来是 <code>CentOS 7.6</code>，重装为 <code>Debian 12</code>。</p><p><img src="https://cdn.tangjiayan.com/notes/web-build/vitepress/vitepress-tencent-cloud/tencent-reinstall-os.png" alt="tencent-reinstall-os"></p><h2 id="服务器安装-node-js-和-npm" tabindex="-1">服务器安装 Node.js 和 npm <a class="header-anchor" href="#服务器安装-node-js-和-npm" aria-label="Permalink to &quot;服务器安装 Node.js 和 npm&quot;">​</a></h2><p>服务器系统重装好后，使用 Xshell 通过 SSH 连接到服务器，进行命令行操作。</p><p>使用 <a href="https://en.wikipedia.org/wiki/APT_(software)" target="_blank" rel="noreferrer">apt</a> 安装 <code>nodejs</code> 和 <code>npm</code>：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">apt</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nodejs</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">apt</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nodejs</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">apt</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">apt</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-v</span></span>
<span class="line"><span style="color:#B392F0;">v18.13.0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-v</span></span>
<span class="line"><span style="color:#6F42C1;">v18.13.0</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-v</span></span>
<span class="line"><span style="color:#B392F0;">9.2.0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-v</span></span>
<span class="line"><span style="color:#6F42C1;">9.2.0</span></span></code></pre></div><h2 id="创建-vitepress-站点文件夹并初始化" tabindex="-1">创建 VitePress 站点文件夹并初始化 <a class="header-anchor" href="#创建-vitepress-站点文件夹并初始化" aria-label="Permalink to &quot;创建 VitePress 站点文件夹并初始化&quot;">​</a></h2><h3 id="创建-vitepress-站点文件夹" tabindex="-1">创建 VitePress 站点文件夹 <a class="header-anchor" href="#创建-vitepress-站点文件夹" aria-label="Permalink to &quot;创建 VitePress 站点文件夹&quot;">​</a></h3><p>我选择在 <code>/usr/local</code> 下创建 VitePress 站点文件夹。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/local</span></span>
<span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vitepress</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vitepress</span></span>
<span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">www</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/local</span></span>
<span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vitepress</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vitepress</span></span>
<span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">www</span></span></code></pre></div><h3 id="vitepress-初始化" tabindex="-1">VitePress 初始化 <a class="header-anchor" href="#vitepress-初始化" aria-label="Permalink to &quot;VitePress 初始化&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vitepress</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vitepress</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vitepress</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vitepress</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">┌  Welcome to VitePress!</span></span>
<span class="line"><span style="color:#e1e4e8;">│</span></span>
<span class="line"><span style="color:#e1e4e8;">◇  Where should VitePress initialize the config?</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ./docs</span></span>
<span class="line"><span style="color:#e1e4e8;">│</span></span>
<span class="line"><span style="color:#e1e4e8;">◇  Site title:</span></span>
<span class="line"><span style="color:#e1e4e8;">│  My Awesome Project</span></span>
<span class="line"><span style="color:#e1e4e8;">│</span></span>
<span class="line"><span style="color:#e1e4e8;">◇  Site description:</span></span>
<span class="line"><span style="color:#e1e4e8;">│  A VitePress Site</span></span>
<span class="line"><span style="color:#e1e4e8;">│</span></span>
<span class="line"><span style="color:#e1e4e8;">◇  Theme:</span></span>
<span class="line"><span style="color:#e1e4e8;">│  Default Theme + Customization</span></span>
<span class="line"><span style="color:#e1e4e8;">│</span></span>
<span class="line"><span style="color:#e1e4e8;">◇  Use TypeScript for config and theme files?</span></span>
<span class="line"><span style="color:#e1e4e8;">│  Yes</span></span>
<span class="line"><span style="color:#e1e4e8;">│</span></span>
<span class="line"><span style="color:#e1e4e8;">◇  Add VitePress npm scripts to package.json?</span></span>
<span class="line"><span style="color:#e1e4e8;">│  Yes</span></span>
<span class="line"><span style="color:#e1e4e8;">│</span></span>
<span class="line"><span style="color:#e1e4e8;">└  Done! Now run npm run docs:dev and start writing.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">┌  Welcome to VitePress!</span></span>
<span class="line"><span style="color:#24292e;">│</span></span>
<span class="line"><span style="color:#24292e;">◇  Where should VitePress initialize the config?</span></span>
<span class="line"><span style="color:#24292e;">│  ./docs</span></span>
<span class="line"><span style="color:#24292e;">│</span></span>
<span class="line"><span style="color:#24292e;">◇  Site title:</span></span>
<span class="line"><span style="color:#24292e;">│  My Awesome Project</span></span>
<span class="line"><span style="color:#24292e;">│</span></span>
<span class="line"><span style="color:#24292e;">◇  Site description:</span></span>
<span class="line"><span style="color:#24292e;">│  A VitePress Site</span></span>
<span class="line"><span style="color:#24292e;">│</span></span>
<span class="line"><span style="color:#24292e;">◇  Theme:</span></span>
<span class="line"><span style="color:#24292e;">│  Default Theme + Customization</span></span>
<span class="line"><span style="color:#24292e;">│</span></span>
<span class="line"><span style="color:#24292e;">◇  Use TypeScript for config and theme files?</span></span>
<span class="line"><span style="color:#24292e;">│  Yes</span></span>
<span class="line"><span style="color:#24292e;">│</span></span>
<span class="line"><span style="color:#24292e;">◇  Add VitePress npm scripts to package.json?</span></span>
<span class="line"><span style="color:#24292e;">│  Yes</span></span>
<span class="line"><span style="color:#24292e;">│</span></span>
<span class="line"><span style="color:#24292e;">└  Done! Now run npm run docs:dev and start writing.</span></span></code></pre></div><h2 id="vitepress-站点上传到服务器" tabindex="-1">VitePress 站点上传到服务器 <a class="header-anchor" href="#vitepress-站点上传到服务器" aria-label="Permalink to &quot;VitePress 站点上传到服务器&quot;">​</a></h2><p>在本地设计好 VitePress 主页后，使用 Bitvise 将本地的 VitePress 站点上传到服务器。</p><p><img src="https://cdn.tangjiayan.com/notes/web-build/vitepress/vitepress-tencent-cloud/upload.png" alt="upload"></p><details class="details custom-block"><summary><code>Permission denied</code> 问题</summary><p>一开始我是直接将整个 VitePress 文件夹上传到服务器上的，但在服务器运行 <code>npm run docs:dev</code> 时，会出现 <code>Permission denied</code> 问题：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ npm run docs:dev</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; docs:dev</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; vitepress dev docs</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">sh: 1: vitepress: Permission denied</span></span>
<span class="line"><span style="color:#e1e4e8;">root@VM-16-14-debian:/usr/local/vit</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ npm run docs:dev</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">&gt; docs:dev</span></span>
<span class="line"><span style="color:#24292e;">&gt; vitepress dev docs</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">sh: 1: vitepress: Permission denied</span></span>
<span class="line"><span style="color:#24292e;">root@VM-16-14-debian:/usr/local/vit</span></span></code></pre></div></details><p>这时试一下 <code>npm run docs:dev</code>，会运行成功：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ pwd</span></span>
<span class="line"><span style="color:#e1e4e8;">/usr/local/vitepress/www</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ pwd</span></span>
<span class="line"><span style="color:#24292e;">/usr/local/vitepress/www</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ npm run docs:dev</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"> vitepress v1.0.0-rc.12</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">  ➜  Local:   http://localhost:5173/</span></span>
<span class="line"><span style="color:#e1e4e8;">  ➜  Network: use --host to expose</span></span>
<span class="line"><span style="color:#e1e4e8;">  ➜  press h to show help</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ npm run docs:dev</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"> vitepress v1.0.0-rc.12</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">  ➜  Local:   http://localhost:5173/</span></span>
<span class="line"><span style="color:#24292e;">  ➜  Network: use --host to expose</span></span>
<span class="line"><span style="color:#24292e;">  ➜  press h to show help</span></span></code></pre></div><p>接下来要配置 Nginx 反向代理将 HTTP / HTTPS 请求转发给这个端口。</p><h2 id="安装-nginx-查找其安装路径" tabindex="-1">安装 Nginx，查找其安装路径 <a class="header-anchor" href="#安装-nginx-查找其安装路径" aria-label="Permalink to &quot;安装 Nginx，查找其安装路径&quot;">​</a></h2><p>用 <a href="https://www.runoob.com/linux/linux-comm-apt.html" target="_blank" rel="noreferrer">apt</a> 命令安装 nginx：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">apt install nginx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">apt install nginx</span></span></code></pre></div><p>用 <a href="https://www.runoob.com/linux/linux-comm-whereis.html" target="_blank" rel="noreferrer">whereis</a> 命令查找其路径：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ whereis nginx</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx: /usr/sbin/nginx /etc/nginx /usr/share/nginx /usr/share/man/man8/nginx.8.gz</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ whereis nginx</span></span>
<span class="line"><span style="color:#24292e;">nginx: /usr/sbin/nginx /etc/nginx /usr/share/nginx /usr/share/man/man8/nginx.8.gz</span></span></code></pre></div><p>经查看，<code>nginx.conf</code> 是在 <code>/etc/nginx</code> 目录下。</p><h2 id="nginx-反向代理和-ssl-配置" tabindex="-1">Nginx 反向代理和 SSL 配置 <a class="header-anchor" href="#nginx-反向代理和-ssl-配置" aria-label="Permalink to &quot;Nginx 反向代理和 SSL 配置&quot;">​</a></h2><details class="details custom-block"><summary>参考</summary><ul><li><a href="https://blog.csdn.net/qq_40036754/article/details/102463099" target="_blank" rel="noreferrer">nginx学习，看这一篇就够了_java冯坚持的博客-CSDN博客</a></li><li><a href="https://blog.csdn.net/qq_24604781/article/details/123091156" target="_blank" rel="noreferrer">Nginx 安装 SSL 配置 HTTPS 超详细完整教程全过程_./configure --prefix=/usr/local/nginx --with-http__草药哥哥的博客-CSDN博客</a></li></ul></details><p><code>nginx.conf</code> 文件内容：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">worker_processes  1;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">events {</span></span>
<span class="line"><span style="color:#e1e4e8;">    worker_connections  1024;</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">http {</span></span>
<span class="line"><span style="color:#e1e4e8;">    sendfile        on;</span></span>
<span class="line"><span style="color:#e1e4e8;">    keepalive_timeout  65;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">    server {</span></span>
<span class="line"><span style="color:#e1e4e8;">        listen       443 ssl;</span></span>
<span class="line"><span style="color:#e1e4e8;">        server_name  www.tangjiayan.com;</span></span>
<span class="line"><span style="color:#e1e4e8;">        error_page 404 /404.html;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">        ssl_certificate     /etc/nginx/cert/www.tangjiayan.com.pem;</span></span>
<span class="line"><span style="color:#e1e4e8;">        ssl_certificate_key  /etc/nginx/cert/www.tangjiayan.com.key;</span></span>
<span class="line"><span style="color:#e1e4e8;">    </span></span>
<span class="line"><span style="color:#e1e4e8;">        ssl_session_timeout  5m;</span></span>
<span class="line"><span style="color:#e1e4e8;">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span></span>
<span class="line"><span style="color:#e1e4e8;">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span></span>
<span class="line"><span style="color:#e1e4e8;">        ssl_prefer_server_ciphers on;</span></span>
<span class="line"><span style="color:#e1e4e8;">    </span></span>
<span class="line"><span style="color:#e1e4e8;">        location / {</span></span>
<span class="line"><span style="color:#e1e4e8;">            proxy_pass http://127.0.0.1:5173;</span></span>
<span class="line"><span style="color:#e1e4e8;">        }</span></span>
<span class="line"><span style="color:#e1e4e8;">    }</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">    server {</span></span>
<span class="line"><span style="color:#e1e4e8;">        listen 80;</span></span>
<span class="line"><span style="color:#e1e4e8;">        server_name www.tangjiayan.com;</span></span>
<span class="line"><span style="color:#e1e4e8;">        rewrite ^(.*)$ https://$host$1;</span></span>
<span class="line"><span style="color:#e1e4e8;">        location / {</span></span>
<span class="line"><span style="color:#e1e4e8;">            index index.html index.htm;</span></span>
<span class="line"><span style="color:#e1e4e8;">        }</span></span>
<span class="line"><span style="color:#e1e4e8;">    }</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">worker_processes  1;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">events {</span></span>
<span class="line"><span style="color:#24292e;">    worker_connections  1024;</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">http {</span></span>
<span class="line"><span style="color:#24292e;">    sendfile        on;</span></span>
<span class="line"><span style="color:#24292e;">    keepalive_timeout  65;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">    server {</span></span>
<span class="line"><span style="color:#24292e;">        listen       443 ssl;</span></span>
<span class="line"><span style="color:#24292e;">        server_name  www.tangjiayan.com;</span></span>
<span class="line"><span style="color:#24292e;">        error_page 404 /404.html;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">        ssl_certificate     /etc/nginx/cert/www.tangjiayan.com.pem;</span></span>
<span class="line"><span style="color:#24292e;">        ssl_certificate_key  /etc/nginx/cert/www.tangjiayan.com.key;</span></span>
<span class="line"><span style="color:#24292e;">    </span></span>
<span class="line"><span style="color:#24292e;">        ssl_session_timeout  5m;</span></span>
<span class="line"><span style="color:#24292e;">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span></span>
<span class="line"><span style="color:#24292e;">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span></span>
<span class="line"><span style="color:#24292e;">        ssl_prefer_server_ciphers on;</span></span>
<span class="line"><span style="color:#24292e;">    </span></span>
<span class="line"><span style="color:#24292e;">        location / {</span></span>
<span class="line"><span style="color:#24292e;">            proxy_pass http://127.0.0.1:5173;</span></span>
<span class="line"><span style="color:#24292e;">        }</span></span>
<span class="line"><span style="color:#24292e;">    }</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">    server {</span></span>
<span class="line"><span style="color:#24292e;">        listen 80;</span></span>
<span class="line"><span style="color:#24292e;">        server_name www.tangjiayan.com;</span></span>
<span class="line"><span style="color:#24292e;">        rewrite ^(.*)$ https://$host$1;</span></span>
<span class="line"><span style="color:#24292e;">        location / {</span></span>
<span class="line"><span style="color:#24292e;">            index index.html index.htm;</span></span>
<span class="line"><span style="color:#24292e;">        }</span></span>
<span class="line"><span style="color:#24292e;">    }</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><p>配置好 <code>nginx.conf</code> 之后，使用 <code>nginx -s reload</code> 重新加载，<code>nginx -t</code> 测试 <code>nginx.conf</code> 文件语法的正确性。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span></span>
<span class="line"><span style="color:#B392F0;">nginx:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">configuration</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/etc/nginx/nginx.conf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">syntax</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ok</span></span>
<span class="line"><span style="color:#B392F0;">nginx:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">configuration</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/etc/nginx/nginx.conf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">successful</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nginx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span></span>
<span class="line"><span style="color:#6F42C1;">nginx:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">configuration</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/etc/nginx/nginx.conf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">syntax</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ok</span></span>
<span class="line"><span style="color:#6F42C1;">nginx:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">configuration</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/etc/nginx/nginx.conf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">successful</span></span></code></pre></div><h2 id="守护进程-vitepress" tabindex="-1">守护进程 VitePress <a class="header-anchor" href="#守护进程-vitepress" aria-label="Permalink to &quot;守护进程 VitePress&quot;">​</a></h2><p>参考 <a href="https://www.ruanyifeng.com/blog/2016/02/linux-daemon.html" target="_blank" rel="noreferrer">Linux 守护进程的启动方法 - 阮一峰的网络日志</a>，运行如下命令守护 vitepress 进程:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">nohup</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docs:dev</span><span style="color:#E1E4E8;"> &amp;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">nohup</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docs:dev</span><span style="color:#24292E;"> &amp;</span></span></code></pre></div><p>使用 <code>netstat -lntp</code> 查看端口情况：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ netstat -lntp</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">Active Internet connections (only servers)</span></span>
<span class="line"><span style="color:#e1e4e8;">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span></span>
<span class="line"><span style="color:#e1e4e8;">tcp        0      0 0.0.0.0:443             0.0.0.0:*               LISTEN      278838/nginx: maste </span></span>
<span class="line"><span style="color:#e1e4e8;">tcp        0      0 127.0.0.1:5173          0.0.0.0:*               LISTEN      531239/node</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ netstat -lntp</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">Active Internet connections (only servers)</span></span>
<span class="line"><span style="color:#24292e;">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span></span>
<span class="line"><span style="color:#24292e;">tcp        0      0 0.0.0.0:443             0.0.0.0:*               LISTEN      278838/nginx: maste </span></span>
<span class="line"><span style="color:#24292e;">tcp        0      0 127.0.0.1:5173          0.0.0.0:*               LISTEN      531239/node</span></span></code></pre></div><details class="details custom-block"><summary>为什么不配置指向静态资源</summary><p>为什么用守护进程的方法，而不是指向静态资源？</p><p>答：我试过将 VitePress <code>/.vitepress/dist</code> 文件夹上传到服务器，然后设置 <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#location" target="_blank" rel="noreferrer">location</a> 指向这个文件夹：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">location / {</span></span>
<span class="line"><span style="color:#e1e4e8;">     root   /usr/local/www;</span></span>
<span class="line"><span style="color:#e1e4e8;">     index  index.html index.htm;</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">location / {</span></span>
<span class="line"><span style="color:#24292e;">     root   /usr/local/www;</span></span>
<span class="line"><span style="color:#24292e;">     index  index.html index.htm;</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><p><img src="https://cdn.tangjiayan.com/notes/web-build/vitepress/vitepress-tencent-cloud/failed.png" alt="failed"></p><p>结果是提示</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">failed to load module script: expected a javascript module script but the server responded with a mime type of &quot;application/octet-stream&quot;. strict mime type checking is enforced for module scripts per html spec.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">failed to load module script: expected a javascript module script but the server responded with a mime type of &quot;application/octet-stream&quot;. strict mime type checking is enforced for module scripts per html spec.</span></span></code></pre></div><p>查了半天，没能解决，所以先用反向代理用着了。</p></details><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://blog.csdn.net/qq_45830276/article/details/126022778" target="_blank" rel="noreferrer">Linux系统安装Nodejs（详细教程）<em>linux安装nodejs</em>@Meto的博客-CSDN博客</a></li><li><a href="https://blog.csdn.net/qq_40036754/article/details/102463099" target="_blank" rel="noreferrer">nginx学习，看这一篇就够了_java冯坚持的博客-CSDN博客</a></li><li><a href="http://nginx.org/en/docs/beginners_guide.html" target="_blank" rel="noreferrer">Beginner’s Guide | nginx.org</a></li><li><a href="https://github.com/mqyqingfeng/Blog/issues/243" target="_blank" rel="noreferrer">一篇教你博客如何部署到自己的服务器 · Issue #243 · mqyqingfeng/Blog</a></li><li><a href="https://www.ruanyifeng.com/blog/2016/02/linux-daemon.html" target="_blank" rel="noreferrer">Linux 守护进程的启动方法 - 阮一峰的网络日志</a></li><li><a href="https://blog.csdn.net/qq_24604781/article/details/123091156" target="_blank" rel="noreferrer">Nginx 安装 SSL 配置 HTTPS 超详细完整教程全过程_./configure --prefix=/usr/local/nginx --with-http__草药哥哥的博客-CSDN博客</a></li></ul>`,54),o=[p];function t(c,r,i,d,y,h){return n(),a("div",null,o)}const v=s(l,[["render",t]]);export{u as __pageData,v as default};
